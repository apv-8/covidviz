{
  
    
        "post0": {
            "title": "Responsive Graphs?",
            "content": "import altair as alt import pandas as pd . raw_data = pd.read_csv(&#39;https://raw.githubusercontent.com/CSSEGISandData/COVID-19/master/csse_covid_19_data/csse_covid_19_time_series/time_series_covid19_confirmed_global.csv&#39;) raw_india = raw_data[raw_data[&#39;Country/Region&#39;] == &#39;India&#39;] df = raw_india.iloc[:,4:] df = df.T df.columns = [&#39;value&#39;] df = df.rename_axis(&#39;date&#39;).reset_index() . a = alt.Chart(df).mark_line().encode( y=&#39;value:Q&#39;, x=&#39;date:T&#39; ) b = alt.Chart(df).mark_bar(opacity=0.5).encode( y=&#39;value:Q&#39;, x=&#39;date:T&#39;, tooltip=&#39;value:Q&#39; ) c = (a+b).properties(width=&quot;container&quot;, height=400, autosize=&#39;fit&#39;) c . html = &quot;&quot;&quot; &lt;head&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vega@{vega_version}&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vega-lite@{vegalite_version}&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vega-embed@{vegaembed_version}&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;item1&quot; id=&quot;vis1&quot;&gt;&lt;/div&gt; &lt;div class=&#39;item2&#39;&gt;Hello World, this is my chart&lt;/div&gt; &lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; vegaEmbed(&#39;#vis1&#39;, {spec1}, {kwargs}).catch(console.error); &lt;/script&gt; &lt;/body&gt; &quot;&quot;&quot; with open(&#39;responsive.html&#39;, &#39;w&#39;) as f: f.write(html.format( vega_version=alt.VEGA_VERSION, vegalite_version=alt.VEGALITE_VERSION, vegaembed_version=alt.VEGAEMBED_VERSION, kwargs = &quot;&quot;&quot;{&quot;actions&quot;: false, &quot;mode&quot;: &quot;vega-lite&quot;}&quot;&quot;&quot;, spec1=c.to_json(indent=None) )) . import geopandas as gpd . ind_shp = gpd.read_file(&#39;india_v2.json&#39;) state_data = pd.read_csv(&#39;https://raw.githubusercontent.com/armsp/covid19.in/master/datasets/clean_daily_statewise_distribution/2020-05-20.csv&#39;) state_data = state_data.drop([&#39;sno.&#39;, &#39;lon&#39;, &#39;lat&#39;, &#39;day&#39;], 1) ind_shp = ind_shp.join(state_data.set_index(&#39;place&#39;), on=&#39;state&#39;) ind_shp = ind_shp.to_crs(epsg=&#39;4326&#39;) . map_in = alt.Chart(ind_shp).mark_geoshape(stroke=&#39;black&#39;).encode( color=alt.Color(&#39;case:Q&#39;, legend=None), tooltip=[&#39;state:N&#39;,&#39;case:Q&#39;,&#39;recovery:Q&#39;,&#39;death:Q&#39;] ).properties(width=&quot;container&quot;, height=400, autosize=&#39;fit&#39;) . map_in . html = &quot;&quot;&quot; &lt;head&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;style.css&quot;&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vega@{vega_version}&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vega-lite@{vegalite_version}&quot;&gt;&lt;/script&gt; &lt;script src=&quot;https://cdn.jsdelivr.net/npm/vega-embed@{vegaembed_version}&quot;&gt;&lt;/script&gt; &lt;/head&gt; &lt;body&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;item1&quot; id=&quot;vis1&quot;&gt;&lt;/div&gt; &lt;div class=&#39;item2&#39;&gt;Hello World, this is my chart&lt;/div&gt; &lt;/div&gt; &lt;script type=&quot;text/javascript&quot;&gt; vegaEmbed(&#39;#vis1&#39;, {spec1}, {kwargs}).catch(console.error); &lt;/script&gt; &lt;/body&gt; &quot;&quot;&quot; with open(&#39;responsive.html&#39;, &#39;w&#39;) as f: f.write(html.format( vega_version=alt.VEGA_VERSION, vegalite_version=alt.VEGALITE_VERSION, vegaembed_version=alt.VEGAEMBED_VERSION, kwargs = &quot;&quot;&quot;{&quot;actions&quot;: false, &quot;mode&quot;: &quot;vega-lite&quot;}&quot;&quot;&quot;, spec1=map_in.to_json(indent=None) )) .",
            "url": "https://armsp.github.io/covidviz/world/time%20series/2020/05/25/Responsive.html",
            "relUrl": "/world/time%20series/2020/05/25/Responsive.html",
            "date": " • May 25, 2020"
        }
        
    
  
    
        ,"post1": {
            "title": "Testing Altair Graphs",
            "content": "#collapse-hide import pandas as pd import altair as alt cars = &#39;https://vega.github.io/vega-datasets/data/cars.json&#39; movies = &#39;https://vega.github.io/vega-datasets/data/movies.json&#39; sp500 = &#39;https://vega.github.io/vega-datasets/data/sp500.csv&#39; stocks = &#39;https://vega.github.io/vega-datasets/data/stocks.csv&#39; flights = &#39;https://vega.github.io/vega-datasets/data/flights-5k.json&#39; # select a point for which to provide details-on-demand label = alt.selection_single( encodings=[&#39;x&#39;], # limit selection to x-axis value on=&#39;mouseover&#39;, # select on mouseover events nearest=True, # select data point nearest the cursor empty=&#39;none&#39; # empty selection includes no data points ) # define our base line chart of stock prices base = alt.Chart().mark_line().encode( alt.X(&#39;date:T&#39;), alt.Y(&#39;price:Q&#39;, scale=alt.Scale(type=&#39;log&#39;)), alt.Color(&#39;symbol:N&#39;) ) alt.layer( base, # base line chart # add a rule mark to serve as a guide line alt.Chart().mark_rule(color=&#39;#aaa&#39;).encode( x=&#39;date:T&#39; ).transform_filter(label), # add circle marks for selected time points, hide unselected points base.mark_circle().encode( opacity=alt.condition(label, alt.value(1), alt.value(0)) ).add_selection(label), # add white stroked text to provide a legible background for labels base.mark_text(align=&#39;left&#39;, dx=5, dy=-5, stroke=&#39;white&#39;, strokeWidth=2).encode( text=&#39;price:Q&#39; ).transform_filter(label), # add text labels for stock prices base.mark_text(align=&#39;left&#39;, dx=5, dy=-5).encode( text=&#39;price:Q&#39; ).transform_filter(label), data=stocks ).properties( width=700, height=400 ) . . . Note: A doc link to an example website: fast.ai should also work fine. . . Tip: This is my tip. .",
            "url": "https://armsp.github.io/covidviz/world/time%20series/2020/05/23/Graphs.html",
            "relUrl": "/world/time%20series/2020/05/23/Graphs.html",
            "date": " • May 23, 2020"
        }
        
    
  

  
  

  
      ,"page1": {
          "title": "About Me",
          "content": "This is where you put the contents of your About page. Like all your pages, it’s in Markdown format. . This website is powered by fastpages 1. . a blogging platform that natively supports Jupyter notebooks in addition to other formats. &#8617; . |",
          "url": "https://armsp.github.io/covidviz/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  

  
  

  

  
  

  

  
  

  
  

  
  

  
      ,"page10": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://armsp.github.io/covidviz/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}